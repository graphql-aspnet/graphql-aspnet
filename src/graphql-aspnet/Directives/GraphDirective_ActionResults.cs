// *************************************************************
// project:  graphql-aspnet
// --
// repo: https://github.com/graphql-aspnet
// docs: https://graphql-aspnet.github.io
// --
// License:  MIT
// *************************************************************

namespace GraphQL.AspNet.Directives
{
    using GraphQL.AspNet.Controllers;
    using GraphQL.AspNet.Directives.ActionResults;
    using GraphQL.AspNet.Interfaces.Controllers;
    using GraphQL.AspNet.Interfaces.Execution;
    using GraphQL.AspNet.Schemas.TypeSystem;

    /// <summary>
    /// A base class defining common requirements for any class wishing to be a directive
    /// that can be assigned at one of the <see cref="DirectiveLocation"/> at runtime.
    /// </summary>
    public partial class GraphDirective : GraphControllerBase<IGraphDirectiveRequest>
    {
        /// <summary>
        /// Returns an action result indicating the directive completed correctly, returned nothing, and that processing
        /// of this field pipeline should continue.
        /// </summary>
        /// <returns>IGraphActionResult&lt;TResult&gt;.</returns>
        protected virtual IGraphActionResult Ok()
        {
            return new DirectiveOkActionResult();
        }

        /// <summary>
        /// Returns an action result indicating the directive completed correctly, returned nothing, but indicates that the
        /// processing of this field pipeline should not continue. (e.g. Sets the cancel flag for the pipeline). The response
        /// data for the pipeline will also be set to null, discarding any result generated by a field resolver.
        /// </summary>
        /// <returns>IGraphActionResult.</returns>
        protected virtual IGraphActionResult Cancel()
        {
            return new DirectiveCancelPipelineResult();
        }
    }
}